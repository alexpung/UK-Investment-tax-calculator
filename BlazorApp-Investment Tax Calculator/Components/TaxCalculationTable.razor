@using Model
@using ViewModel
@using Model.Interfaces
@using Syncfusion.Blazor.Grids
@using Model.TaxEvents
@using Model.UkTaxModel
@using Model.UkTaxModel.Stocks
@using Enumerations
@using InvestmentTaxCalculator.Components
@using Services

@inject TradeCalculationResult tradeCalculationResult
@inject SfGridToolBarHandlingService _toolbarHandlingService

<div class="bg-dark text-light">
    <div class="row my-4">
        <div class="col">
            <h3>Disposal calculation summary</h3>
        </div>
    </div>
    <div class="row me-3">
        <div class="col">
            <SfGrid ID="DisposalCalculationGrid" @ref="disposalCalculationGrid" DataSource="@_trades"
                    AllowPaging="true" AllowSorting="true" AllowPdfExport="true" AllowExcelExport="true" AllowResizing="true" AllowFiltering="true" AllowTextWrap="true"
                    Toolbar="@(new List<string>() { "PdfExport", "ExcelExport", "Print" })">
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                <GridPageSettings PageSizes=@(new List<int>() {25, 50, 100}) PageSize="25"></GridPageSettings>
                <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="TradeTaxCalculationViewModel?"></GridEvents>
                <GridColumns>
                    <GridColumn Field=@nameof(TradeTaxCalculationViewModel.TradeId) HeaderText="Trade Id"></GridColumn>
                    <GridColumn Field=@nameof(TradeTaxCalculationViewModel.Date) HeaderText="Date" Format="d"></GridColumn>
                    <GridColumn Field=@nameof(TradeTaxCalculationViewModel.AssetType) HeaderText="Asset Type"></GridColumn>
                    <GridColumn Field=@nameof(TradeTaxCalculationViewModel.AssetName) HeaderText="Asset Name"></GridColumn>
                    <GridColumn Field=@nameof(TradeTaxCalculationViewModel.AcquisitionOrDisposal) HeaderText="Acquisition/Disposal"></GridColumn>
                    <GridColumn HeaderText="Matching Quantity">
                        <GridColumns>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.Qty) HeaderText="Total Quantity disposed"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.SameDayMatchQty) HeaderText="Same day"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.BedAndBreakfastMatchQty) HeaderText="Bed and Breakfast"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.Section104MatchQty) HeaderText="Section 104"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.CoveredShortMatchQty) HeaderText="Cover Short Sale"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.UnmatchedQty) HeaderText="Unmatched Shares"></GridColumn>
                        </GridColumns>
                    </GridColumn>
                    <GridColumn HeaderText="Calculation Result">
                        <GridColumns>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.TotalProceed) HeaderText="Total Proceeeds"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.TotalAllowableCost) HeaderText="Allowable Cost"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.ContractValue) HeaderText="Contract Value (Future only)"></GridColumn>
                            <GridColumn Field=@nameof(TradeTaxCalculationViewModel.Gain) HeaderText="Gain (Loss)"></GridColumn>
                        </GridColumns>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code {
    private SfGrid<TradeTaxCalculationViewModel?> disposalCalculationGrid = new();
    private IEnumerable<TradeTaxCalculationViewModel?> _trades => tradeCalculationResult.CalculatedTrade
                                                                .Select(trade => new TradeTaxCalculationViewModel(trade))
                                                                .DefaultIfEmpty();

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        await _toolbarHandlingService.ToolbarClickHandler(args, disposalCalculationGrid);
    }
}
